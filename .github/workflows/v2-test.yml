name: v2 core Tests
on:
  pull_request:
  merge_group:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}-v2-tests
  cancel-in-progress: true

jobs:
  server-v2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: true
          cache-dependency-path: go.sum
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            server/v2/*.go
            server/v2/go.mod
            server/v2/go.sum
            server/v2/testdata/*.toml
      - name: test & coverage report creation
        if: env.GIT_DIFF
        run: |
          cd server/v2 && go test -mod=readonly -race -timeout 30m -tags='ledger test_ledger_mock'
  stf:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: true
          cache-dependency-path: go.sum
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            server/v2/stf/**/*.go
            server/v2/stf/go.mod
            server/v2/stf/go.sum
      - name: test & coverage report creation
        if: env.GIT_DIFF
        run: |
          cd server/v2/stf && go test -mod=readonly -race -timeout 30m -tags='ledger test_ledger_mock'

  appmanager:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: true
          cache-dependency-path: go.sum
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            server/v2/appmanager/**/*.go
            server/v2/appmanager/go.mod
            server/v2/appmanager/go.sum
      - name: test & coverage report creation
        if: env.GIT_DIFF
        run: |
          cd server/v2/appmanager && go test -mod=readonly -race -timeout 30m -covermode=atomic -tags='ledger test_ledger_mock'

  test-system-v2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: true
          cache-dependency-path: |
            simapp/go.sum
            systemtest/go.sum
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            **/*.go
            go.mod
            go.sum
            **/go.mod
            **/go.sum
            **/Makefile
            Makefile
      - name: Install musl lib for simd (docker) binary
        if: env.GIT_DIFF
        run: |
          sudo apt-get install -y musl
      - name: system tests v2
        if: env.GIT_DIFF
        run: |
          COSMOS_BUILD_OPTIONS=v2 make test-system
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: "testnet-setup"
          path: ./systemtests/testnet/
          retention-days: 3

  cometbft:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: true
          cache-dependency-path: go.sum
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            server/v2/cometbft/**/*.go
            server/v2/cometbft/go.mod
            server/v2/cometbft/go.sum
      - name: test & coverage report creation
        if: env.GIT_DIFF
        run: |
          cd server/v2/cometbft && go test -mod=readonly -race -timeout 30m -tags='ledger test_ledger_mock'

  test-simapp-v2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: true
          cache-dependency-path: go.sum
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            **/*.go
            go.mod
            go.sum
            **/go.mod
            **/go.sum
      - name: tests simapp
        if: env.GIT_DIFF
        run: |
          cd simapp/v2
          go test -mod=readonly -timeout 30m -tags='norace ledger test_ledger_mock' ./...
      - name: simapp-v2-smoke-test
        if: env.GIT_DIFF
        run: |
          COSMOS_BUILD_OPTIONS=v2 make install
          ./scripts/init-simapp-v2.sh
          simd start &
          SIMD_PID=$!
          cnt=0
          while ! simd query block --type=height 5; do
            cnt=$((cnt + 1))
            if [ $cnt -gt 30 ]; then
              kill -9 "$SIMD_PID"
              exit 1
            fi
            sleep 1
          done
          kill -9 "$SIMD_PID"

  test-store-v2:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: true
          cache-dependency-path: store/v2/go.sum
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            store/v2/**/*.go
            store/v2/go.mod
            store/v2/go.sum
      - name: test & coverage report creation
        if: env.GIT_DIFF
        run: |
          cd store/v2
          nix develop .. -c go test -mod=readonly -timeout 30m -coverprofile=coverage.out -covermode=atomic -tags='norace ledger test_ledger_mock rocksdb' ./...
      - name: sonarcloud
        if: ${{ env.GIT_DIFF && !github.event.pull_request.draft && env.SONAR_TOKEN != null }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: store/v2/
