syntax = "proto3";
package cosmos.accounts.defaults.lockup;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "cosmossdk.io/x/accounts/defaults/lockup/types";

// Period defines a length of time and amount of coins that will be lock.
message Period {
  // Period duration
  google.protobuf.Duration length = 1
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdduration) = true];
  repeated cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// UnbondingClawback defines an tracking for unbonding clawback operation.
message UnbondingClawback {
  // end_time defines expected end time of unbonding periods
  google.protobuf.Timestamp end_time = 1
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdtime) = true];

  // end_time defines expected end time of unbonding periods
  repeated cosmos.base.v1beta1.Coin unbonding_amt = 2 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
